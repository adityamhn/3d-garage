{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","args","domElement","App","Box","props","ref","useRef","useFrame","state","current","rotation","y","castShadow","receiveShadow","color","opacity","transparent","Floor","Bulb","emissive","style","height","widht","shadowMap","background","position","attach","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMAA,YAAO,CAAEC,oBAET,IAAMC,EAAQ,WACZ,MAAuBC,cAAfC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,GAChB,OACE,+BAAeC,KAAM,CAACF,EAAQC,EAAGE,eA4DtBC,MAxDf,WAEE,IAAMC,EAAM,SAACC,GACX,IAAMC,EAAMC,mBAMZ,OAJAC,aAAS,SAAAC,GAEPH,EAAII,QAAQC,SAASC,GAAK,OAG1B,+CAAMN,IAAKA,GAASD,GAApB,IAA2BQ,YAAU,EAACC,eAAa,EAAnD,UACE,sCACA,sCAAsBC,MAAM,OAC5BC,QAAS,EAAGC,aAAW,SAKvBC,EAAQ,SAACb,GACb,OACE,iDAAUA,GAAV,IAAiBS,eAAa,EAA9B,UACE,mCAAmBb,KAAM,CAAC,GAAI,EAAG,MACjC,8CAMAkB,EAAO,SAACd,GACZ,OACE,iDAAUA,GAAV,cACE,4BAAYQ,YAAU,IACtB,sCAAsBZ,KAAM,CAAC,GAAK,GAAI,MACtC,mCAAmBmB,SAAS,gBAMlC,OACE,qBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SAAtC,SAEE,eAAC,IAAD,CACEC,WAAS,EAACH,MAAO,CAAEI,WAAY,SAAW1B,OAAQ,CAAE2B,SAAU,CAAC,EAAE,EAAE,IADrE,UAEI,qBAAKC,OAAO,MAAM1B,KAAM,CAAC,QAAQ,EAAE,MACrC,8BAAc2B,UAAW,KACzB,cAACT,EAAD,CAAMO,SAAU,CAAC,EAAG,EAAG,KACvB,4BAAYzB,KAAM,CAAC,KACnB,cAAC,EAAD,IACA,cAACG,EAAD,CAAKsB,SAAU,CAAC,EAAG,EAAG,KACtB,cAACR,EAAD,CAAOQ,SAAU,CAAC,GAAI,GAAK,WCrDpBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.adcb4d2a.chunk.js","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\nimport { Canvas, useFrame, extend, useThree } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nextend({ OrbitControls })\n\nconst Orbit = () => {\n  const { camera, gl } = useThree()\n  return (\n    <orbitControls args={[camera, gl.domElement]} />\n  )\n}\n\nfunction App() {\n\n  const Box = (props) => {\n    const ref = useRef()\n\n    useFrame(state => {\n      // ref.current.rotation.x += 0.01\n      ref.current.rotation.y += 0.01\n    })\n    return (\n      <mesh ref={ref} {...props} castShadow receiveShadow>\n        <boxBufferGeometry />\n        <meshPhysicalMaterial color=\"blue\"\n        opacity={1} transparent />\n      </mesh>\n    )\n  }\n\n  const Floor = (props) => {\n    return (\n      <mesh {...props} receiveShadow>\n        <boxBufferGeometry args={[20, 1, 10]} />\n        <meshPhysicalMaterial />\n      </mesh>\n    )\n  }\n\n\n  const Bulb = (props) => {\n    return (\n      <mesh {...props}>\n        <pointLight castShadow />\n        <sphereBufferGeometry args={[0.2, 20, 20]} />\n        <meshPhongMaterial emissive=\"yellow\" />\n      </mesh>\n    )\n  }\n\n\n  return (\n    <div style={{ height: \"100vh\", widht: \"100vw\" }}>\n\n      <Canvas\n        shadowMap style={{ background: \"black\" }} camera={{ position: [1,5,1] }}>\n          <fog attach=\"fog\" args={['white',1,10]} />\n        <ambientLight intensity={0.2} />\n        <Bulb position={[0, 3, 0]} />\n        <axesHelper args={[5]} />\n        <Orbit />\n        <Box position={[0, 1, 0]} />\n        <Floor position={[0, -0.5, 0]} />\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}